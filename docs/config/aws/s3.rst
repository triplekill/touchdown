Simple storage service
======================

.. module:: touchdown.aws.s3
   :synopsis: Simple Storage Services resources.


.. class:: Bucket

    A bucket in the Amazon S3 service.

    Can be added to any account resource::

        bucket = aws.add_bucket(
            name='my-bucket',
        )

    .. attribute:: name

        The name of the bucket. This field is required, and it must be unique
        for the whole of Amazon AWS.

    .. attribute:: region

        The region of the bucket. The default is to create the bucket in the
        sane region as the region specified by the account.

    .. attribute:: accelerate

        Set this to ``Enabled`` to enable Transfer Acceleration.

    .. attribute:: rules

        A list of CORS rules::

            aws.add_bucket(
                name="my-test-bucket",
                rules=[{
                    "allowed_methods": ["PUT", "POST", "GET"],
                    "allowed_origins": ["*"],
                    "allowed_headers": ["content-md5"],
                    "expose_headers" :["ETag"],
                    "max_age_seconds": 3000,
                }],
            )

    .. attribute:: policy

        An S3 bucket policy string::

            aws.add_bucket(
                name="my-test-bucket",
                policy= json.dumps({
                    "Version":"2008-10-17",
                    "Statement":[{
                        "Sid":"AllowFullControlForBucketOwner",
                        "Effect":"Allow",
                        "Principal":{"AWS":"arn:aws:iam::111111111111:root"},
                        "Action":"s3:*",
                        "Resource":"arn:aws:s3:::my-test-bucket/*"}],
                }),
            )

      .. attribute:: notify_lambda

          A list of lambda functions to call when a notification event occurs. For example::

              mybucket = aws.add_bucket(
                  name='my-bucket',
                  notify_lambda=[{
                      "name": "process-new-objects",
                      "function": myfunction,
                      "events": ["s3:ObjectCreated:*"]
                  }]
              )


Adding files to buckets
-----------------------

.. class:: File

    Touchdown has basic support for pushing files to S3. This is lightweight and
    basic. It's using for setting up things like crossdomain.xml::

        bucket = aws.add_bucket(name="my-test-bucket")
        bucket.add_file(
            name="crossdomain.xml",
            contents=open("crossdomain.xml").read(),
            acl="public-read",
        )

    .. attribute:: name

    .. attribute:: contents

    .. attribute: acl

        Set one of the canned ACL's.

        ``private``
            Owner gets ``FULL_CONTROL``. No one else has access rights. This
            is the default.
        ``public-read``
            Owner gets ``FULL_CONTROL``. The ``AllUsers group`` gets ``READ``
            access.
        ``public-read-write``
            Owner gets ``FULL_CONTROL``. The ``AllUsers`` group gets ``READ``
            and ``WRITE`` access. Granting this on a bucket is generally not
            recommended.
        ``authenticated-read``
            Owner gets ``FULL_CONTROL``. The ``AuthenticatedUsers`` group gets
            ``READ`` access.
        ``bucket-owner-read``
            Object owner gets ``FULL_CONTROL``. Bucket owner gets ``READ``
            access.
        ``bucket-owner-full-control``
            Both the object owner and the bucket owner get ``FULL_CONTROL``
            over the object.
